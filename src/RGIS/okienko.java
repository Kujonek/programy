/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package RGIS;

import java.awt.Desktop;
import java.awt.Dimension;
import static java.awt.SystemColor.desktop;
import static java.awt.image.ImageObserver.WIDTH;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Collections;
import java.util.List;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author pol0211416
 */
public class okienko extends javax.swing.JFrame {
    
    String tab [];
    int licznik_zapisu=10;
    int licznik_odczytu=1;
    File foldery = new File("C:/inv_zew/dogima");
    private Object frame;
    int zapisywanie_EAN=1;
    int sklep=0;
    /**
     * Creates new form okienko
     */
    public okienko() {
        
        initComponents();
        JFrame frame=new JFrame();
        frame.setPreferredSize(new Dimension(100, 190));
        jPanel1.setVisible(false);
        
        jPanel3.setVisible(false);
        jPanel2.setVisible(true);
        jPanel4.setVisible(false);
        jPanel5.setVisible(false);
        tab = new String [1000]; 
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton24 = new javax.swing.JButton();
        jButton25 = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jScrollPane8 = new javax.swing.JScrollPane();
        jList3 = new javax.swing.JList();
        jButton27 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jProgressBar1 = new javax.swing.JProgressBar();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea5 = new javax.swing.JTextArea();
        jButton4 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        jButton23 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton26 = new javax.swing.JButton();
        jButton28 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jButton11 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jButton29 = new javax.swing.JButton();
        jButton30 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "EAN", "Nazwa artykułu", "Segment", "Rynek"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(jTable1);

        jButton24.setText("Pobierz");
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });

        jButton25.setText("Zapisz!");
        jButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25ActionPerformed(evt);
            }
        });

        jScrollPane7.setViewportView(jList1);

        jCheckBox1.setText("Segmenty");

        jCheckBox2.setText("Rynki");

        jScrollPane8.setViewportView(jList3);

        jButton27.setText("Powrót");
        jButton27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton27ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 707, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBox1))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addGap(21, 21, 21)
                                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jCheckBox2)))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jButton24)
                        .addGap(92, 92, 92)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(68, 68, 68)
                        .addComponent(jButton25)
                        .addGap(27, 27, 27)
                        .addComponent(jButton27)))
                .addGap(0, 29, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jCheckBox1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton24)
                    .addComponent(jButton25)
                    .addComponent(jButton27)
                    .addComponent(jLabel3))
                .addGap(19, 19, 19))
        );

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane3.setViewportView(jTextArea3);

        jButton12.setText("Rozpocznij!");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setText("Powrót");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton14.setText("Przejdź do folderu \"inv_zew\"");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton15.setText("Przejdź do folderu \"dogima\"");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jButton16.setText("Stwórz foldery!");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton12)
                        .addGap(109, 109, 109)
                        .addComponent(jButton14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton13))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 819, Short.MAX_VALUE)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton13)
                    .addComponent(jButton12)
                    .addComponent(jButton14)
                    .addComponent(jButton15)
                    .addComponent(jButton16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton1.setText("Wczytaj dane z pliku:");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jButton2.setText("Przekształć dane");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Zapisz!");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton5.setText("Stwórz foldery");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Przejdź do folderu inv_zew");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Przejdź do folderu dogima");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton17.setText("Powrót");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        jLabel1.setText(" ");
        jLabel1.setToolTipText("");

        jLabel2.setText(" ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1)
                                .addGap(225, 225, 225)
                                .addComponent(jButton3)
                                .addGap(130, 130, 130)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton17)
                        .addGap(22, 22, 22))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 435, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton3)
                    .addComponent(jButton2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton6)
                            .addComponent(jButton7)
                            .addComponent(jButton5))
                        .addGap(20, 20, 20))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jButton17)
                        .addContainerGap(29, Short.MAX_VALUE))))
        );

        jTextArea4.setColumns(20);
        jTextArea4.setRows(5);
        jScrollPane4.setViewportView(jTextArea4);

        jTextArea5.setColumns(20);
        jTextArea5.setRows(5);
        jScrollPane5.setViewportView(jTextArea5);

        jButton4.setText("Pobierz konkretny plik");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton18.setText("Przekształć!");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        jButton19.setText("Zapisz");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        jButton20.setText("Otwórz folder inv_zew");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        jButton21.setText("Otwórz folder dogima");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        jButton22.setText("Stwórz foldery!");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });

        jButton23.setText("Powrót");
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74)
                .addComponent(jScrollPane5)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 228, Short.MAX_VALUE)
                        .addComponent(jButton19)
                        .addGap(319, 319, 319))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jButton20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton18)
                    .addComponent(jButton23))
                .addGap(20, 20, 20))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE)
                    .addComponent(jScrollPane4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton18)
                    .addComponent(jButton19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton20)
                    .addComponent(jButton21)
                    .addComponent(jButton22)
                    .addComponent(jButton23))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        jPanel2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel2.setMaximumSize(new java.awt.Dimension(200, 200));
        jPanel2.setPreferredSize(new java.awt.Dimension(200, 200));

        jButton8.setText("Plik po pliku");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Automat");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("Konkretny plik");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton26.setText("Eany Bonarka");
        jButton26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton26ActionPerformed(evt);
            }
        });

        jButton28.setText("Eany Bronowice");
        jButton28.setToolTipText("");
        jButton28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton28ActionPerformed(evt);
            }
        });

        jButton11.setText("Wyjście");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Do plików od RGIS");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Wyciąganie Eanów dla sklepów");

        jButton29.setText("Eany Aleja Pokoju");
        jButton29.setToolTipText("");
        jButton29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton29ActionPerformed(evt);
            }
        });

        jButton30.setText("Eany Bora Komo.");
        jButton30.setToolTipText("");
        jButton30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton30ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton28, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                            .addComponent(jButton26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton29, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                            .addComponent(jButton30, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel4)
                .addGap(0, 3, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton10)
                .addGap(23, 23, 23)
                .addComponent(jLabel5)
                .addGap(2, 2, 2)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton29)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton30)
                .addGap(18, 18, 18)
                .addComponent(jButton11)
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 888, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 24, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 24, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 10, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 10, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 321, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 322, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 601, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 36, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 37, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 16, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 16, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 16, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 17, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 27, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 28, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 115, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 115, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
  
 pobieranie();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
       przekrztalcanie();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        zapisz();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        
        stworz_folder();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
       inv_zew_otworz_folder();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        
       dogima_otworz_folder();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        jPanel2.setVisible(false);
         
        jPanel1.setVisible(true);
        
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
System.exit(0);       // TODO add your handling code here:
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
automat();        
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
inv_zew_otworz_folder();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
dogima_otworz_folder();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
stworz_folder();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
jPanel3.setVisible(false);
jPanel2.setVisible(true); // TODO add your handling code here:
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
jPanel1.setVisible(false);
jPanel2.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
jPanel2.setVisible(false);
jPanel3.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
jPanel2.setVisible(false);
jPanel4.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
if (!"".equals(jTextArea5.getText())){
            
        try{
           
        File file = new File("C:\\inv_zew\\dogima\\INV0"+licznik_zapisu+".dat");
 
			
			if (!file.exists()) {
				file.createNewFile();
			}
 
			FileWriter fw = new FileWriter(file.getAbsoluteFile());
			BufferedWriter bw = new BufferedWriter(fw);
                        
                        if (!"".equals(jTextArea5.getText()))
                        { 
                            int o=Integer.parseInt(jLabel2.getText());
                            for(int i=0;i<o;i++){
                            bw.write(tab[i]);
                            bw.newLine();
                            }
                            
                        }
                      
			bw.close();
                           
		} catch (IOException e) {
                    
			e.printStackTrace();
                         JOptionPane.showMessageDialog(null, e.getMessage()+" zaczynam od 0", "Error",JOptionPane.ERROR_MESSAGE);
		}
        licznik_zapisu++;
        jTextArea5.setText(null);
        JOptionPane.showMessageDialog(null, "Plik został poprawnie zapisany!");
        }
         else
                        {
                            JOptionPane.showMessageDialog(null, "Najpierw przekształć dane!!", "Error",JOptionPane.ERROR_MESSAGE);
                        } 
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
dogima_otworz_folder();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton21ActionPerformed

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
jPanel4.setVisible(false);
jPanel2.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_jButton23ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
inv_zew_otworz_folder();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton20ActionPerformed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
stworz_folder();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton22ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
JFileChooser fileChooser = new JFileChooser();
fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
int result = fileChooser.showOpenDialog(this);
if (result == JFileChooser.APPROVE_OPTION) {
    File selectedFile = fileChooser.getSelectedFile();
    System.out.println("Selected file: " + selectedFile.getAbsolutePath());
System.out.println("wybrałeś: "+selectedFile);
if (licznik_odczytu>=10)
 {
     
           try{

  int b=0;
  FileInputStream fstream = new FileInputStream(selectedFile);
  
  DataInputStream in = new DataInputStream(fstream);
  BufferedReader br = new BufferedReader(new InputStreamReader(in));
  String strLine;
  
 jTextArea4.setText(null);
  while ((strLine = br.readLine()) != null)   {
 
  String p=jTextArea4.getText();
  jTextArea4.setText(null);
  if ("".equals(p))
      jTextArea4.setText(strLine);
  else
  jTextArea4.setText(p+" \n"+strLine);
  
 
  
      tab[b]=strLine;
  b++;
  jLabel2.setText(Integer.toString(b));
  }
if(b>=1000){
  JOptionPane.showMessageDialog(null,  " plik ma więcej niż 999 wierszy!!!", "Error",JOptionPane.ERROR_MESSAGE);
jTextArea1.setText(null);
return;
  }

   
  in.close();
    }catch (Exception e){
  System.err.println("Error: " + e.getMessage());
  licznik_odczytu=0;
  JOptionPane.showMessageDialog(null, e.getMessage() + "zaczynam od 0", "Error",JOptionPane.ERROR_MESSAGE);
  }
   licznik_odczytu++;
 }
    else
 {
           try{
  
  int b=0;
  FileInputStream fstream = new FileInputStream(selectedFile);
  
  DataInputStream in = new DataInputStream(fstream);
  BufferedReader br = new BufferedReader(new InputStreamReader(in));
  String strLine;
  
 jTextArea4.setText(null);
  while ((strLine = br.readLine()) != null)   {
 
  String p=jTextArea4.getText();
  jTextArea4.setText(null);
  if ("".equals(p))
      jTextArea4.setText(strLine);
  else
  jTextArea4.setText(p+" \n"+strLine);
  
 
  
      tab[b]=strLine;
  b++;
  jLabel2.setText(Integer.toString(b));
  }
if(b>=1000)
{
  JOptionPane.showMessageDialog(null,  " plik ma więcej niż 999 wierszy!!!", "Error",JOptionPane.ERROR_MESSAGE);
jTextArea4.setText(null);
return;
  }

   
  in.close();
    }catch (Exception e){
  System.err.println("Error: " + e.getMessage());
  JOptionPane.showMessageDialog(null, e.getMessage() + " zaczynam od 0", "Error",JOptionPane.ERROR_MESSAGE);
  licznik_odczytu=0;
  }
           licznik_odczytu++;
 } }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
if(!"".equals(jTextArea4.getText()))
       {
        int j=Integer.parseInt(jLabel2.getText());
       String a,b;
       tab[1]=tab[1].replaceAll("M", "R");
       a=tab[1].substring(0, 12);
        String p;
        int licznik=1;
        
        for(int i=0;i<j;i++)
        {
            
            b=tab[i].substring(15);
            
           
            
            
            p=jTextArea5.getText();
  jTextArea5.setText(null);
            if ("".equals(p)){
             if(licznik>=10&licznik<100)
            {
                jTextArea5.setText(a+"0"+licznik+b);
                tab[i]=a+"0"+licznik+b;
            }
            else if(licznik>0&licznik<10)
            {
             jTextArea5.setText(a+"00"+licznik+b);   
             tab[i]=a+"00"+licznik+b;
            }
            else
                    {
                        jTextArea5.setText(a+licznik+b);
                        tab[i]=a+licznik+b;
                    }
             
            }
  else
              if(licznik>=10&licznik<100)
            {
                jTextArea5.setText(p+" \n"+a+"0"+licznik+b);
                tab[i]=a+"0"+licznik+b;
            }
            else if(licznik>0&licznik<10)
            {
             jTextArea5.setText(p+" \n"+a+"00"+licznik+b); 
             tab[i]=a+"00"+licznik+b;
            }
            else
                    {
                        jTextArea5.setText(p+" \n"+a+licznik+b);
                        tab[i]=a+licznik+b;
                    }  
  
          licznik++;  
        }
       }
       else
           {
                            JOptionPane.showMessageDialog(null, "Najpierw pobierz dane!!", "Error",JOptionPane.ERROR_MESSAGE);
                        } // TODO add your handling code here:
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
       if (sklep==26){
        
        if(jCheckBox1.isSelected()==true&jCheckBox2.isSelected()==false)
        {
            String wybrane = jList1.getSelectedValuesList().toString();
            jTable1.setAutoCreateRowSorter(true);
            wybrane=wybrane.substring(WIDTH, wybrane.length()-1);
            wybrane=wybrane.replaceAll(",", "");
            wybrane=wybrane.replaceAll(" ", " OR CRAYAR = ");

            System.out.println(wybrane);
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            int rows = model.getRowCount();
            for (int i = rows - 1; i >= 0; i--) {
                model.removeRow(i);
            }
            Connection conn = null;
            Properties connectionProps = new Properties();
            connectionProps.put("user", "xrel");
            connectionProps.put("password", "xrel");
            try {
                conn = DriverManager.getConnection("jdbc:odbc:pol02601",
                    connectionProps);
                System.out.println("Połączono z bazą danych");
                Statement st = conn.createStatement();
                ResultSet rs = st.executeQuery("SELECT CEANAR,DEANAR ,LARTAR,CRAYAR,CSECAR FROM B31SDFH.FTARTP00 where CRAYAR = "+ wybrane);
                //System.out.println("SELECT [EAN_Full_EAN] ,[ItemName_Full_EAN],[SegmentNb_Full_EAN],[RynekNb_Full_EAN] FROM [DS_POL026_Data].[dbo].[Nomenclature_Items_Full_EAN] where [SegmentNb_Full_EAN] = " + wybrane);
                while (rs.next()) {
                    String d1 = rs.getString(1);
                    String d2 = rs.getString(2);
                    d1=d1+d2;
                    String d3 = rs.getString(3);
                    String d4 = rs.getString(4);
                    String d5 = rs.getString(5);
                    model.addRow(new Object[]{d1, d3, d4, d5});
                }
                rs.close(); //zwalnianie pamięci
                st.close(); //zwalnianie pamięci

                conn.close();
                JOptionPane.showMessageDialog(null, "Gotowe!");
            } catch (SQLException ex) {
                Logger.getLogger(okienko.class.getName()).log(Level.SEVERE, "nie udało się połączyć z bazą danych", ex);
JOptionPane.showMessageDialog(null, ex.getMessage()+" nie połączono z bazą danych", "Error",JOptionPane.ERROR_MESSAGE);
            }}
            else if(jCheckBox2.isSelected()==true&jCheckBox1.isSelected()==false)
            {
                String wybrane = jList3.getSelectedValuesList().toString();
                jTable1.setAutoCreateRowSorter(true);
                wybrane=wybrane.substring(WIDTH, wybrane.length()-1);
                wybrane=wybrane.replaceAll(",", "");
                wybrane=wybrane.replaceAll(" ", " OR CSECAR = ");

                System.out.println(wybrane);
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                int rows = model.getRowCount();
                for (int i = rows - 1; i >= 0; i--) {
                    model.removeRow(i);
                }
                Connection conn = null;
            Properties connectionProps = new Properties();
            connectionProps.put("user", "xrel");
            connectionProps.put("password", "xrel");
            try {
                conn = DriverManager.getConnection("jdbc:odbc:pol02601",
                    connectionProps);
                System.out.println("Połączono z bazą danych");
                Statement st = conn.createStatement();
                ResultSet rs = st.executeQuery("SELECT CEANAR,DEANAR ,LARTAR,CRAYAR,CSECAR FROM B31SDFH.FTARTP00 where CSECAR = "+ wybrane);
                while (rs.next()) {
                    String d1 = rs.getString(1);
                    String d2 = rs.getString(2);
                    d1=d1+d2;
                    String d3 = rs.getString(3);
                    String d4 = rs.getString(4);
                    String d5 = rs.getString(5);
                    model.addRow(new Object[]{d1, d3, d4, d5});
                    }
                    rs.close(); //zwalnianie pamięci
                    st.close(); //zwalnianie pamięci

                    conn.close();
                    JOptionPane.showMessageDialog(null, "Gotowe!");
                } catch (SQLException ex) {
                    Logger.getLogger(okienko.class.getName()).log(Level.SEVERE, "nie udało się połączyć z bazą danych", ex);
JOptionPane.showMessageDialog(null, ex.getMessage()+" nie połączono z bazą danych", "Error",JOptionPane.ERROR_MESSAGE);
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Eany po Segmentach czy Rynkach ?", "Error",JOptionPane.ERROR_MESSAGE);
            }
       }
       else if(sklep==29)
       {
           if(jCheckBox1.isSelected()==true&jCheckBox2.isSelected()==false)
        {
            String wybrane = jList1.getSelectedValuesList().toString();
            jTable1.setAutoCreateRowSorter(true);
            wybrane=wybrane.substring(WIDTH, wybrane.length()-1);
            wybrane=wybrane.replaceAll(",", "");
            wybrane=wybrane.replaceAll(" ", " OR CRAYAR = ");

            System.out.println(wybrane);
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            int rows = model.getRowCount();
            for (int i = rows - 1; i >= 0; i--) {
                model.removeRow(i);
            }
             Connection conn = null;
            Properties connectionProps = new Properties();
            connectionProps.put("user", "xrel");
            connectionProps.put("password", "xrel");
            try {
                conn = DriverManager.getConnection("jdbc:odbc:pol02901",
                    connectionProps);
                System.out.println("Połączono z bazą danych");
                Statement st = conn.createStatement();
                ResultSet rs = st.executeQuery("SELECT CEANAR,DEANAR ,LARTAR,CRAYAR,CSECAR FROM B31SDFH.FTARTP00 where CRAYAR = "+ wybrane);
                while (rs.next()) {
                    String d1 = rs.getString(1);
                    String d2 = rs.getString(2);
                    d1=d1+d2;
                    String d3 = rs.getString(3);
                    String d4 = rs.getString(4);
                    String d5 = rs.getString(5);
                    model.addRow(new Object[]{d1, d3, d4, d5});
                }
                rs.close(); //zwalnianie pamięci
                st.close(); //zwalnianie pamięci

                conn.close();
                JOptionPane.showMessageDialog(null, "Gotowe!");
            } catch (SQLException ex) {
                Logger.getLogger(okienko.class.getName()).log(Level.SEVERE, "nie udało się połączyć z bazą danych", ex);
JOptionPane.showMessageDialog(null, ex.getMessage()+" nie połączono z bazą danych", "Error",JOptionPane.ERROR_MESSAGE);
            }}
            else if(jCheckBox2.isSelected()==true&jCheckBox1.isSelected()==false)
            {
                String wybrane = jList3.getSelectedValuesList().toString();
                jTable1.setAutoCreateRowSorter(true);
                wybrane=wybrane.substring(WIDTH, wybrane.length()-1);
                wybrane=wybrane.replaceAll(",", "");
                wybrane=wybrane.replaceAll(" ", " OR CSECAR = ");

                System.out.println(wybrane);
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                int rows = model.getRowCount();
                for (int i = rows - 1; i >= 0; i--) {
                    model.removeRow(i);
                }
                 Connection conn = null;
            Properties connectionProps = new Properties();
            connectionProps.put("user", "xrel");
            connectionProps.put("password", "xrel");
            try {
                conn = DriverManager.getConnection("jdbc:odbc:pol02901",
                    connectionProps);
                System.out.println("Połączono z bazą danych");
                Statement st = conn.createStatement();
                ResultSet rs = st.executeQuery("SELECT CEANAR,DEANAR ,LARTAR,CRAYAR,CSECAR FROM B31SDFH.FTARTP00 where CSECAR = "+ wybrane);
                while (rs.next()) {
                    String d1 = rs.getString(1);
                    String d2 = rs.getString(2);
                    d1=d1+d2;
                    String d3 = rs.getString(3);
                    String d4 = rs.getString(4);
                    String d5 = rs.getString(5);
                    model.addRow(new Object[]{d1, d3, d4, d5});
                    }
                    rs.close(); //zwalnianie pamięci
                    st.close(); //zwalnianie pamięci

                    conn.close();
                    JOptionPane.showMessageDialog(null, "Gotowe!");
                } catch (SQLException ex) {
                    Logger.getLogger(okienko.class.getName()).log(Level.SEVERE, "nie udało się połączyć z bazą danych", ex);
JOptionPane.showMessageDialog(null, ex.getMessage()+" nie połączono z bazą danych", "Error",JOptionPane.ERROR_MESSAGE);
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Eany po Segmentach czy Rynkach ?", "Error",JOptionPane.ERROR_MESSAGE);
            }
           
       }
       
       else if(sklep==135)
       {
           if(jCheckBox1.isSelected()==true&jCheckBox2.isSelected()==false)
        {
            String wybrane = jList1.getSelectedValuesList().toString();
            jTable1.setAutoCreateRowSorter(true);
            wybrane=wybrane.substring(WIDTH, wybrane.length()-1);
            wybrane=wybrane.replaceAll(",", "");
            wybrane=wybrane.replaceAll(" ", " OR CRAYAR = ");

            System.out.println(wybrane);
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            int rows = model.getRowCount();
            for (int i = rows - 1; i >= 0; i--) {
                model.removeRow(i);
            }
             Connection conn = null;
            Properties connectionProps = new Properties();
            connectionProps.put("user", "xrel");
            connectionProps.put("password", "xrel");
            try {
                conn = DriverManager.getConnection("jdbc:odbc:pol13501",
                    connectionProps);
                System.out.println("Połączono z bazą danych");
                Statement st = conn.createStatement();
                ResultSet rs = st.executeQuery("SELECT CEANAR,DEANAR ,LARTAR,CRAYAR,CSECAR FROM B31SDFH.FTARTP00 where CRAYAR = "+ wybrane);
                while (rs.next()) {
                    String d1 = rs.getString(1);
                    String d2 = rs.getString(2);
                    d1=d1+d2;
                    String d3 = rs.getString(3);
                    String d4 = rs.getString(4);
                    String d5 = rs.getString(5);
                    model.addRow(new Object[]{d1, d3, d4, d5});
                }
                rs.close(); //zwalnianie pamięci
                st.close(); //zwalnianie pamięci

                conn.close();
                JOptionPane.showMessageDialog(null, "Gotowe!");
            } catch (SQLException ex) {
                Logger.getLogger(okienko.class.getName()).log(Level.SEVERE, "nie udało się połączyć z bazą danych", ex);
JOptionPane.showMessageDialog(null, ex.getMessage()+" nie połączono z bazą danych", "Error",JOptionPane.ERROR_MESSAGE);
            }}
            else if(jCheckBox2.isSelected()==true&jCheckBox1.isSelected()==false)
            {
                String wybrane = jList3.getSelectedValuesList().toString();
                jTable1.setAutoCreateRowSorter(true);
                wybrane=wybrane.substring(WIDTH, wybrane.length()-1);
                wybrane=wybrane.replaceAll(",", "");
                wybrane=wybrane.replaceAll(" ", " OR CSECAR = ");

                System.out.println(wybrane);
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                int rows = model.getRowCount();
                for (int i = rows - 1; i >= 0; i--) {
                    model.removeRow(i);
                }
                 Connection conn = null;
            Properties connectionProps = new Properties();
            connectionProps.put("user", "xrel");
            connectionProps.put("password", "xrel");
            try {
                conn = DriverManager.getConnection("jdbc:odbc:pol13501",
                    connectionProps);
                System.out.println("Połączono z bazą danych");
                Statement st = conn.createStatement();
                ResultSet rs = st.executeQuery("SELECT CEANAR,DEANAR ,LARTAR,CRAYAR,CSECAR FROM B31SDFH.FTARTP00 where CSECAR = "+ wybrane);
                while (rs.next()) {
                    String d1 = rs.getString(1);
                    String d2 = rs.getString(2);
                    d1=d1+d2;
                    String d3 = rs.getString(3);
                    String d4 = rs.getString(4);
                    String d5 = rs.getString(5);
                    model.addRow(new Object[]{d1, d3, d4, d5});
                    }
                    rs.close(); //zwalnianie pamięci
                    st.close(); //zwalnianie pamięci

                    conn.close();
                    JOptionPane.showMessageDialog(null, "Gotowe!");
                } catch (SQLException ex) {
                    Logger.getLogger(okienko.class.getName()).log(Level.SEVERE, "nie udało się połączyć z bazą danych", ex);
JOptionPane.showMessageDialog(null, ex.getMessage()+" nie połączono z bazą danych", "Error",JOptionPane.ERROR_MESSAGE);
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Eany po Segmentach czy Rynkach ?", "Error",JOptionPane.ERROR_MESSAGE);
            }
           
       }
       else if(sklep==144)
       {
           if(jCheckBox1.isSelected()==true&jCheckBox2.isSelected()==false)
        {
            String wybrane = jList1.getSelectedValuesList().toString();
            jTable1.setAutoCreateRowSorter(true);
            wybrane=wybrane.substring(WIDTH, wybrane.length()-1);
            wybrane=wybrane.replaceAll(",", "");
            wybrane=wybrane.replaceAll(" ", " OR CRAYAR = ");

            System.out.println(wybrane);
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            int rows = model.getRowCount();
            for (int i = rows - 1; i >= 0; i--) {
                model.removeRow(i);
            }
             Connection conn = null;
            Properties connectionProps = new Properties();
            connectionProps.put("user", "xrel");
            connectionProps.put("password", "xrel");
            try {
                conn = DriverManager.getConnection("jdbc:odbc:pol14401",
                    connectionProps);
                System.out.println("Połączono z bazą danych");
                Statement st = conn.createStatement();
                ResultSet rs = st.executeQuery("SELECT CEANAR,DEANAR ,LARTAR,CRAYAR,CSECAR FROM B31SDFH.FTARTP00 where CRAYAR = "+ wybrane);
                while (rs.next()) {
                    String d1 = rs.getString(1);
                    String d2 = rs.getString(2);
                    d1=d1+d2;
                    String d3 = rs.getString(3);
                    String d4 = rs.getString(4);
                    String d5 = rs.getString(5);
                    model.addRow(new Object[]{d1, d3, d4, d5});
                }
                rs.close(); //zwalnianie pamięci
                st.close(); //zwalnianie pamięci

                conn.close();
                JOptionPane.showMessageDialog(null, "Gotowe!");
            } catch (SQLException ex) {
                Logger.getLogger(okienko.class.getName()).log(Level.SEVERE, "nie udało się połączyć z bazą danych", ex);
JOptionPane.showMessageDialog(null, ex.getMessage()+" nie połączono z bazą danych", "Error",JOptionPane.ERROR_MESSAGE);
            }}
            else if(jCheckBox2.isSelected()==true&jCheckBox1.isSelected()==false)
            {
                String wybrane = jList3.getSelectedValuesList().toString();
                jTable1.setAutoCreateRowSorter(true);
                wybrane=wybrane.substring(WIDTH, wybrane.length()-1);
                wybrane=wybrane.replaceAll(",", "");
                wybrane=wybrane.replaceAll(" ", " OR CSECAR = ");

                System.out.println(wybrane);
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                int rows = model.getRowCount();
                for (int i = rows - 1; i >= 0; i--) {
                    model.removeRow(i);
                }
                 Connection conn = null;
            Properties connectionProps = new Properties();
            connectionProps.put("user", "xrel");
            connectionProps.put("password", "xrel");
            try {
                conn = DriverManager.getConnection("jdbc:odbc:pol14401",
                    connectionProps);
                System.out.println("Połączono z bazą danych");
                Statement st = conn.createStatement();
                ResultSet rs = st.executeQuery("SELECT CEANAR,DEANAR ,LARTAR,CRAYAR,CSECAR FROM B31SDFH.FTARTP00 where CSECAR = "+ wybrane);
                while (rs.next()) {
                    String d1 = rs.getString(1);
                    String d2 = rs.getString(2);
                    d1=d1+d2;
                    String d3 = rs.getString(3);
                    String d4 = rs.getString(4);
                    String d5 = rs.getString(5);
                    model.addRow(new Object[]{d1, d3, d4, d5});
                    }
                    rs.close(); //zwalnianie pamięci
                    st.close(); //zwalnianie pamięci

                    conn.close();
                    JOptionPane.showMessageDialog(null, "Gotowe!");
                } catch (SQLException ex) {
                    Logger.getLogger(okienko.class.getName()).log(Level.SEVERE, "nie udało się połączyć z bazą danych", ex);
JOptionPane.showMessageDialog(null, ex.getMessage()+" nie połączono z bazą danych", "Error",JOptionPane.ERROR_MESSAGE);
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Eany po Segmentach czy Rynkach ?", "Error",JOptionPane.ERROR_MESSAGE);
            }
           
       }
       
       else
       {
           JOptionPane.showMessageDialog(null, "Coś poszło nie tak... Zamknij program i uruchom na nowo." , "Error", JOptionPane.ERROR_MESSAGE);
       }
            // TODO add your handling code here:
    }//GEN-LAST:event_jButton24ActionPerformed

    private void jButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton25ActionPerformed
        if (sklep==26)
        {
        int ilosc_wierszy = jTable1.getRowCount();
        try {

            File file = new File("C:\\inv_zew\\baza026.txt");

            if (file.exists()) {
               int result= JOptionPane.showConfirmDialog(null,"Czy na pewno chcesz nadpisać plik?","Tytuł okienka", JOptionPane.YES_NO_CANCEL_OPTION);
                if(JOptionPane.OK_OPTION==result)
                {
                    file.createNewFile();
                    FileWriter fw = new FileWriter(file.getAbsoluteFile());
            BufferedWriter bw = new BufferedWriter(fw);

            for (int i = 0; i < ilosc_wierszy; i++) {

                bw.write((String) jTable1.getValueAt(i, 0) + "\t" + jTable1.getValueAt(i, 1));
                bw.newLine();
            }
JOptionPane.showMessageDialog(null, "Plik został zapisany w lokalizacji C:\\inv_zew jako baza026.txt");
            bw.close();
                }
                else if(JOptionPane.NO_OPTION==result)
                {
                    file=new File("C:\\inv_zew\\baza026("+zapisywanie_EAN+").txt");
                FileWriter fw = new FileWriter(file.getAbsoluteFile());
            BufferedWriter bw = new BufferedWriter(fw);

            for (int i = 0; i < ilosc_wierszy; i++) {

                bw.write((String) jTable1.getValueAt(i, 0) + "\t" + jTable1.getValueAt(i, 1));
                bw.newLine();
            }
JOptionPane.showMessageDialog(null, "Plik został zapisany w lokalizacji C:\\inv_zew jako baza026("+zapisywanie_EAN+").txt");
            bw.close();
                }
                else if(JOptionPane.CANCEL_OPTION==result)
                {
                    JOptionPane.showMessageDialog(null, "Plik nie został zapisany!" , "Error", JOptionPane.ERROR_MESSAGE);
                }
                
            }
else
            {
             file.createNewFile();
                    FileWriter fw = new FileWriter(file.getAbsoluteFile());
            BufferedWriter bw = new BufferedWriter(fw);

            for (int i = 0; i < ilosc_wierszy; i++) {

                bw.write((String) jTable1.getValueAt(i, 0) + "\t" + jTable1.getValueAt(i, 1));
                bw.newLine();
             }
            bw.close();
            JOptionPane.showMessageDialog(null, "Plik został zapisany w lokalizacji C:\\inv_zew jako baza026.txt");
            
            }
            

        } catch (IOException e) {

            e.printStackTrace();
            JOptionPane.showMessageDialog(null, e.getMessage() , "Error", JOptionPane.ERROR_MESSAGE);
        }
        }
        if (sklep==29)
        {
            int ilosc_wierszy = jTable1.getRowCount();
        try {

            File file = new File("C:\\inv_zew\\baza029.txt");

            if (file.exists()) {
               int result= JOptionPane.showConfirmDialog(null,"Czy na pewno chcesz nadpisać plik?","Tytuł okienka", JOptionPane.YES_NO_CANCEL_OPTION);
                if(JOptionPane.OK_OPTION==result)
                {
                    file.createNewFile();
                    FileWriter fw = new FileWriter(file.getAbsoluteFile());
            BufferedWriter bw = new BufferedWriter(fw);

            for (int i = 0; i < ilosc_wierszy; i++) {

                bw.write((String) jTable1.getValueAt(i, 0) + "\t" + jTable1.getValueAt(i, 1));
                bw.newLine();
            }
JOptionPane.showMessageDialog(null, "Plik został zapisany w lokalizacji C:\\inv_zew jako baza029.txt");
            bw.close();
                }
                else if(JOptionPane.NO_OPTION==result)
                {
                    file=new File("C:\\inv_zew\\baza026("+zapisywanie_EAN+").txt");
                FileWriter fw = new FileWriter(file.getAbsoluteFile());
            BufferedWriter bw = new BufferedWriter(fw);

            for (int i = 0; i < ilosc_wierszy; i++) {

                bw.write((String) jTable1.getValueAt(i, 0) + "\t" + jTable1.getValueAt(i, 1));
                bw.newLine();
            }
JOptionPane.showMessageDialog(null, "Plik został zapisany w lokalizacji C:\\inv_zew jako baza029("+zapisywanie_EAN+").txt");
            bw.close();
                }
                else if(JOptionPane.CANCEL_OPTION==result)
                {
                    JOptionPane.showMessageDialog(null, "Plik nie został zapisany!" , "Error", JOptionPane.ERROR_MESSAGE);
                }
                
            }
else
            {
             file.createNewFile();
                    FileWriter fw = new FileWriter(file.getAbsoluteFile());
            BufferedWriter bw = new BufferedWriter(fw);

            for (int i = 0; i < ilosc_wierszy; i++) {

                bw.write((String) jTable1.getValueAt(i, 0) + "\t" + jTable1.getValueAt(i, 1));
                bw.newLine();
             }
            bw.close();
            JOptionPane.showMessageDialog(null, "Plik został zapisany w lokalizacji C:\\inv_zew jako baza029.txt");
            
            }
            

        } catch (IOException e) {

            e.printStackTrace();
            JOptionPane.showMessageDialog(null, e.getMessage() , "Error", JOptionPane.ERROR_MESSAGE);
        }
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton25ActionPerformed

    private void jButton26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton26ActionPerformed
jPanel2.setVisible(false);
sklep=26;
jLabel3.setText("POL02601-Auchan Bonarka");
Connection conn = null;
        Properties connectionProps = new Properties();
        connectionProps.put("user", "dreamstoresa");
        connectionProps.put("password", "ernest26");
        try {
            conn = DriverManager.getConnection("jdbc:sqlserver://SEWRISDS_DB\\SEWRISDS_DB;databaseName=DS_POL026_Data",
                    connectionProps);
            System.out.println("Połączono z bazą danych");
            Statement st = conn.createStatement();
            int wartosc = 0;
            int sprawdz = 1000;
            
            DefaultListModel dlm = new DefaultListModel();
            ResultSet rs = st.executeQuery("SELECT [SegmentNb_Full_EAN] FROM [DS_POL026_Data].[dbo].[Nomenclature_Items_Full_EAN]");
            while (rs.next()) {
                wartosc = rs.getInt(1);
                if (sprawdz != wartosc) {
                    dlm.addElement(wartosc);
                    sprawdz = wartosc;

                }

            }
            jList1.setModel(dlm);
            rs = null;
            wartosc = 0;
            sprawdz = 1000;

            DefaultListModel dlm1 = new DefaultListModel();
            rs = st.executeQuery("SELECT [RynekNb_Full_EAN] FROM [DS_POL026_Data].[dbo].[Nomenclature_Items_Full_EAN]");
            while (rs.next()) {
                wartosc = rs.getInt(1);
                if (sprawdz != wartosc) {
                    dlm1.addElement(wartosc);
                    sprawdz = wartosc;

                }

            }
            jList3.setModel(dlm1);
            rs.close(); //zwalnianie pamięci
            st.close(); //zwalnianie pamięci
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(okienko.class.getName()).log(Level.SEVERE, "nie udało się połączyć z bazą danych", ex);
            JOptionPane.showMessageDialog(null, ex.getMessage()+" nie połączono z bazą danych", "Error",JOptionPane.ERROR_MESSAGE);
        }
jPanel5.setVisible(true);
// TODO add your handling code here:
    }//GEN-LAST:event_jButton26ActionPerformed

    private void jButton27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton27ActionPerformed
        // TODO add your handling code here:
        jPanel5.setVisible(false);
        jPanel2.setVisible(true);
        sklep=0;
        jLabel3.setText("");
    }//GEN-LAST:event_jButton27ActionPerformed

    private void jButton28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton28ActionPerformed
jPanel2.setVisible(false);
sklep=29;
jLabel3.setText("POL02901-Auchan Bronowice");
Connection conn = null;
        Properties connectionProps = new Properties();
        connectionProps.put("user", "xrel");
        connectionProps.put("password", "xrel");
        try {
            conn = DriverManager.getConnection("jdbc:odbc:pol02901",
                    connectionProps);
            System.out.println("Połączono z bazą danych");
            Statement st = conn.createStatement();
            int wartosc = 0;
            int sprawdz = 1000;
            
            DefaultListModel dlm = new DefaultListModel();
            ResultSet rs = st.executeQuery("SELECT DISTINCT CRAYAR FROM B31SDFH.FTARTP00");
            while (rs.next()) {
                wartosc = rs.getInt(1);
                
                    dlm.addElement(wartosc);
                    
             }
            
            jList1.setModel(dlm);
            rs = null;
            wartosc = 0;
            sprawdz = 1000;

            DefaultListModel dlm1 = new DefaultListModel();
            rs = st.executeQuery("SELECT DISTINCT CSECAR FROM B31SDFH.FTARTP00");
            while (rs.next()) {
                wartosc = rs.getInt(1);
                
                    dlm1.addElement(wartosc);
                    

                

            }
            jList3.setModel(dlm1);
            rs.close(); //zwalnianie pamięci
            st.close(); //zwalnianie pamięci
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(okienko.class.getName()).log(Level.SEVERE, "nie udało się połączyć z bazą danych", ex);
            JOptionPane.showMessageDialog(null, ex.getMessage()+" nie połączono z bazą danych", "Error",JOptionPane.ERROR_MESSAGE);
        }        
jPanel5.setVisible(true);
// TODO add your handling code here:
    }//GEN-LAST:event_jButton28ActionPerformed

    private void jButton29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton29ActionPerformed
        jPanel2.setVisible(false);
sklep=135;
jLabel3.setText("POL13501-Auchan Aleja Pokoju");

              
jPanel5.setVisible(true);
    }//GEN-LAST:event_jButton29ActionPerformed

    private void jButton30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton30ActionPerformed
        jPanel2.setVisible(false);
sklep=144;
jLabel3.setText("POL14401-Auchan Bora Komorowskiego");

              
jPanel5.setVisible(true);
    }//GEN-LAST:event_jButton30ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(okienko.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(okienko.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(okienko.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(okienko.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new okienko().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton28;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JList jList1;
    private javax.swing.JList jList3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea jTextArea4;
    private javax.swing.JTextArea jTextArea5;
    // End of variables declaration//GEN-END:variables

    private void automat() {
     jProgressBar1.setValue(0);   
    jTextArea1.setText("");        
        String ilosc_plikow;
        String ilosc_wierszy;
int licznik_zapisu=10;
    int licznik_odczytu=1;
ilosc_plikow = JOptionPane.showInputDialog("Podaj ilość plików:");

int y=Integer.parseInt(ilosc_plikow);
jProgressBar1.setMaximum(y);
for(int x=0;x<y;x++)
{
    ///
    ///
    ///
    ///odczytuje
    ///
    ///
    ///
         if (licznik_odczytu>=10)
 {
           try{

  int b=0;
  FileInputStream fstream = new FileInputStream("C:\\inv_zew\\inv0"+licznik_odczytu+".dat");
  
  DataInputStream in = new DataInputStream(fstream);
  BufferedReader br = new BufferedReader(new InputStreamReader(in));
  String strLine;
  
 
  while ((strLine = br.readLine()) != null)   {
 
  String p="";
  
  if ("".equals(p))
      p=strLine;
  else
  p=p+" \n"+strLine;
  
 
  
      tab[b]=strLine;
  b++;
 jLabel2.setText(Integer.toString(b));
      
  if(b>=1000){
    int error=licznik_odczytu;
  JOptionPane.showMessageDialog(null,  "plik " + "inv0"+error+ " ma więcej niż 999 wierszy!!!", "Error",JOptionPane.ERROR_MESSAGE);
ilosc_wierszy=Integer.toString(b);
  jTextArea3.setText(jTextArea3.getText()+" \n"+"plik inv0"+licznik_odczytu+" ma "+ ilosc_wierszy+" wierszy lub więcej!");
  return;
  }
  }
  ilosc_wierszy=Integer.toString(b);
  if ("".equals(jTextArea3.getText()))
  {
      
      jTextArea3.setText("plik inv0"+licznik_odczytu+" ma "+ ilosc_wierszy+" wierszy!");
  }
  else
  {
      
      jTextArea3.setText(jTextArea3.getText()+" \n"+"plik inv0"+licznik_odczytu+" ma "+ ilosc_wierszy+" wierszy!");
  }
  


   
  in.close();
  
    }catch (Exception e){
  System.err.println("Error: " + e.getMessage());
          JOptionPane.showMessageDialog(null, e.getMessage()+" zaczynam od 0", "Error",JOptionPane.ERROR_MESSAGE);
  }
   licznik_odczytu++;
 }
    else
 {
           try{
 
   int b=0;
  FileInputStream fstream = new FileInputStream("C:\\inv_zew\\inv00"+licznik_odczytu+".dat");
  
  DataInputStream in = new DataInputStream(fstream);
  BufferedReader br = new BufferedReader(new InputStreamReader(in));
  String strLine;
  
 
  while ((strLine = br.readLine()) != null)   {
 
  String p="";
  
  if ("".equals(p))
      p=strLine;
  else
  p=p+" \n"+strLine;
  
 
  
      tab[b]=strLine;
  b++;
 jLabel2.setText(Integer.toString(b)); 
if(b>=1000){
    int error=licznik_odczytu;
  JOptionPane.showMessageDialog(null,  "plik " + "inv00"+error+ " ma więcej niż 999 wierszy!!!", "Error",JOptionPane.ERROR_MESSAGE);
  ilosc_wierszy=Integer.toString(b);
  jTextArea3.setText(jTextArea3.getText()+" \n"+"plik inv00"+licznik_odczytu+" ma "+ ilosc_wierszy+" wierszy lub więcej!");
  return;
        
}
  }
ilosc_wierszy=Integer.toString(b);
  if ("".equals(jTextArea3.getText()))
  {
      
      jTextArea3.setText("plik inv00"+licznik_odczytu+" ma "+ ilosc_wierszy+" wierszy!");
  }
  else
  {
      
      jTextArea3.setText(jTextArea3.getText()+" \n"+"plik inv00"+licznik_odczytu+" ma "+ ilosc_wierszy+" wierszy!");
  }
   
  in.close();
    }catch (Exception e){
  System.err.println("Error: " + e.getMessage());
          JOptionPane.showMessageDialog(null, e.getMessage()+" zaczynam od 0", "Error",JOptionPane.ERROR_MESSAGE);
  }
 licznik_odczytu++;
 }
   
           
  
///           
///
///
//edytuje pliki
           ///
           ///
           ///
           int j=Integer.parseInt(jLabel2.getText());
       String a,c;
       tab[1]=tab[1].replaceAll("M", "R");
       a=tab[1].substring(0, 12);
        
        int licznik=1;
        
        for(int i=0;i<j;i++)
        {
            
            c=tab[i].substring(15);
            
           
            
            
            
  
           
              if(licznik>=10&licznik<100)
            {
                
                tab[i]=a+"0"+licznik+c;
            }
            else if(licznik>0&licznik<10)
            {
             
             tab[i]=a+"00"+licznik+c;
            }
            else
                    {
                        
                        tab[i]=a+licznik+c;
                    }  
  
          licznik++;  
        }
       
     
 
         ///
         ///
         ///
      ///zapisuje  
            ///
         ///
         ///
         
        try{
           
        File file = new File("C:\\inv_zew\\dogima\\INV0"+licznik_zapisu+".dat");
 
			
			if (!file.exists()) {
                          
				file.createNewFile();
                           
			}
 
			FileWriter fw = new FileWriter(file.getAbsoluteFile());
			BufferedWriter bw = new BufferedWriter(fw);
                        
                         int o=Integer.parseInt(jLabel2.getText());
                            for(int i=0;i<o;i++){
                            bw.write(tab[i]);
                            bw.newLine();
                            }
                            
                        
                      
			bw.close();
                           
		} catch (IOException e) {
			e.printStackTrace();
                        JOptionPane.showMessageDialog(null, e.getMessage()+" zaczynam od 0", "Error",JOptionPane.ERROR_MESSAGE);
		}
        licznik_zapisu++;
        jProgressBar1.setValue(jProgressBar1.getValue()+1);
}   
JOptionPane.showMessageDialog(null, "Pliki zostały prawidłowo zapisane!");
 }

    private void dogima_otworz_folder() {
     try {
            File folder1=new File("C:\\inv_zew\\dogima");
            if(folder1.isDirectory()==true)
            {
            Desktop.getDesktop().open(new File("C:\\inv_zew\\dogima"));
        }  
            else
                JOptionPane.showMessageDialog(null, "Folder nie istnieje!", "Error",JOptionPane.ERROR_MESSAGE);
        }
        catch (IOException e) {
            
        }
    }

    private void inv_zew_otworz_folder() {
     try {
            File folder2=new File("C:\\inv_zew");
            if(folder2.isDirectory()==true)
            {
            Desktop.getDesktop().open(new File("C:\\inv_zew"));
        }  
            else
                JOptionPane.showMessageDialog(null, "Folder nie istnieje!", "Error",JOptionPane.ERROR_MESSAGE);
        }
        catch (IOException e) { 
            
        }  
    }

    private void pobieranie() {
    if (licznik_odczytu>=10)
 {
     
           try{

  int b=0;
  FileInputStream fstream = new FileInputStream("C:\\inv_zew\\inv0"+licznik_odczytu+".dat");
  jLabel1.setText("inv0"+Integer.toString(licznik_odczytu));
  DataInputStream in = new DataInputStream(fstream);
  BufferedReader br = new BufferedReader(new InputStreamReader(in));
  String strLine;
  
 jTextArea1.setText(null);
  while ((strLine = br.readLine()) != null)   {
 
  String p=jTextArea1.getText();
  jTextArea1.setText(null);
  if ("".equals(p))
      jTextArea1.setText(strLine);
  else
  jTextArea1.setText(p+" \n"+strLine);
  
 
  
      tab[b]=strLine;
  b++;
  jLabel2.setText(Integer.toString(b));
  }
if(b>=1000){
  JOptionPane.showMessageDialog(null,  " plik ma więcej niż 999 wierszy!!!", "Error",JOptionPane.ERROR_MESSAGE);
jTextArea1.setText(null);
return;
  }

   
  in.close();
    }catch (Exception e){
  System.err.println("Error: " + e.getMessage());
  licznik_odczytu=0;
  JOptionPane.showMessageDialog(null, e.getMessage() + "zaczynam od 0", "Error",JOptionPane.ERROR_MESSAGE);
  }
   licznik_odczytu++;
 }
    else
 {
           try{
  
  int b=0;
  FileInputStream fstream = new FileInputStream("C:\\inv_zew\\inv00"+licznik_odczytu+".dat");
  jLabel1.setText("inv00"+Integer.toString(licznik_odczytu));
  DataInputStream in = new DataInputStream(fstream);
  BufferedReader br = new BufferedReader(new InputStreamReader(in));
  String strLine;
  
 jTextArea1.setText(null);
  while ((strLine = br.readLine()) != null)   {
 
  String p=jTextArea1.getText();
  jTextArea1.setText(null);
  if ("".equals(p))
      jTextArea1.setText(strLine);
  else
  jTextArea1.setText(p+" \n"+strLine);
  
 
  
      tab[b]=strLine;
  b++;
  jLabel2.setText(Integer.toString(b));
  }
if(b>=1000)
{
  JOptionPane.showMessageDialog(null,  " plik ma więcej niż 999 wierszy!!!", "Error",JOptionPane.ERROR_MESSAGE);
jTextArea1.setText(null);
return;
  }

   
  in.close();
    }catch (Exception e){
  System.err.println("Error: " + e.getMessage());
  JOptionPane.showMessageDialog(null, e.getMessage() + " zaczynam od 0", "Error",JOptionPane.ERROR_MESSAGE);
  licznik_odczytu=0;
  }
           licznik_odczytu++;
 } 
    }

    private void przekrztalcanie() {
    if(!"".equals(jTextArea1.getText()))
       {
        int j=Integer.parseInt(jLabel2.getText());
       String a,b;
       tab[1]=tab[1].replaceAll("M", "R");
       a=tab[1].substring(0, 12);
        String p;
        int licznik=1;
        
        for(int i=0;i<j;i++)
        {
            
            b=tab[i].substring(15);
            
           
            
            
            p=jTextArea2.getText();
  jTextArea2.setText(null);
            if ("".equals(p)){
             if(licznik>=10&licznik<100)
            {
                jTextArea2.setText(a+"0"+licznik+b);
                tab[i]=a+"0"+licznik+b;
            }
            else if(licznik>0&licznik<10)
            {
             jTextArea2.setText(a+"00"+licznik+b);   
             tab[i]=a+"00"+licznik+b;
            }
            else
                    {
                        jTextArea2.setText(a+licznik+b);
                        tab[i]=a+licznik+b;
                    }
             
            }
  else
              if(licznik>=10&licznik<100)
            {
                jTextArea2.setText(p+" \n"+a+"0"+licznik+b);
                tab[i]=a+"0"+licznik+b;
            }
            else if(licznik>0&licznik<10)
            {
             jTextArea2.setText(p+" \n"+a+"00"+licznik+b); 
             tab[i]=a+"00"+licznik+b;
            }
            else
                    {
                        jTextArea2.setText(p+" \n"+a+licznik+b);
                        tab[i]=a+licznik+b;
                    }  
  
          licznik++;  
        }
       }
       else
           {
                            JOptionPane.showMessageDialog(null, "Najpierw pobierz dane!!", "Error",JOptionPane.ERROR_MESSAGE);
                        } 
    }

    private void stworz_folder() {
     if(foldery.isDirectory()==false)
        {
            foldery.mkdirs();
        
        JOptionPane.showMessageDialog(null, "Foldery zostały stworzone!");
        }
        else
            JOptionPane.showMessageDialog(null, "ej ej te foldery istnieją!", "Error",JOptionPane.ERROR_MESSAGE);
    }

    private void zapisz() {
    if (!"".equals(jTextArea2.getText())){
            
        try{
           
        File file = new File("C:\\inv_zew\\dogima\\INV0"+licznik_zapisu+".dat");
 
			
			if (!file.exists()) {
				file.createNewFile();
			}
 
			FileWriter fw = new FileWriter(file.getAbsoluteFile());
			BufferedWriter bw = new BufferedWriter(fw);
                        
                        if (!"".equals(jTextArea2.getText()))
                        { 
                            int o=Integer.parseInt(jLabel2.getText());
                            for(int i=0;i<o;i++){
                            bw.write(tab[i]);
                            bw.newLine();
                            }
                            
                        }
                      
			bw.close();
                           
		} catch (IOException e) {
                    
			e.printStackTrace();
                         JOptionPane.showMessageDialog(null, e.getMessage()+" zaczynam od 0", "Error",JOptionPane.ERROR_MESSAGE);
		}
        licznik_zapisu++;
        jTextArea2.setText(null);
        JOptionPane.showMessageDialog(null, "Plik został poprawnie zapisany!");
        }
         else
                        {
                            JOptionPane.showMessageDialog(null, "Najpierw przekształć dane!!", "Error",JOptionPane.ERROR_MESSAGE);
                        } 
    }

    
}
